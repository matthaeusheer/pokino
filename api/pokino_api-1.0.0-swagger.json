openapi: 3.0.0
info:
description: Internal API specification for the pokino application.
version: 1.0.0
title: Pokino API
contact:
email: matthaeusheer@gmail.com
license:
name: Apache 2.0
url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
- name: login
description: Stuff to login new players to the game
- name: weather
description: Exposes the internal weather API
- name: pokemon
description: Functionality to query Pokémon data
paths:
'/login/{name}':
post:
tags:
- login
summary: Login as a new player onto the platform.
description: Choose a name and login. You will be assigned a unique ID.
parameters:
- in: path
name: name
required: true
schema:
type: string
responses:
'200':
description: A new player has been logged in
content:
text/plain:
schema:
type: string
example: 42
'403':
description: The player name is already taken
/pokemon/all:
get:
tags:
- pokemon
summary: Get all Pokémon available.
description: |
This will basically return all Pokemon available in the internal database.
responses:
'200':
description: 'Search results, list of all Pokémon.'
content:
application/json:
schema:
type: array
items:
$ref: '#/components/schemas/Pokemon'
/pokemon/random:
get:
tags:
- pokemon
summary: Get a random Pokémon.
description: 'Returns a single Pokémon, possibly from a subset of Pokémon.'
responses:
'200':
description: Single Pokémon.
content:
application/json:
schema:
type: object
$ref: '#/components/schemas/Pokemon'
/weather/current:
get:
tags:
- weather
summary: Returns the current weather.
responses:
'200':
description: Weather object.
content:
application/json:
schema:
type: object
$ref: '#/components/schemas/WeatherModel'
/weather/random:
get:
tags:
- weather
summary: Returns a random weather json with three simple entries.
responses:
'200':
description: A simple PokinoWeather object.
content:
application/json:
schema:
type: object
$ref: '#components/schemas/PokinoWeather'
components:
schemas:
Pokemon:
type: object
required:
- id
- pokeDexIdx
- name
- type1
- type2
- sumPoints
- healthPoints
- attackPoints
- defensePoints
- specialAttackPoints
- specialDefensePoints
- attackSpeed
- generation
- isLegendary
properties:
id:
type: integer
example: 42
pokeDexIdx:
type: integer
example: 1
name:
type: string
example: Pikachu
type1:
type: string
example: Grass
type2:
type: string
example: Poison
sumPoints:
type: integer
example: 100
healthPoints:
type: integer
example: 100
attackPoints:
type: integer
example: 100
defensePoints:
type: integer
example: 100
specialAttackPoints:
type: integer
example: 100
specialDefensePoints:
type: integer
example: 100
attackSpeed:
type: integer
example: 10
generation:
type: integer
example: 10
isLegendary:
type: boolean
example: true
PokinoWeather:
type: object
properties:
windSpeedKmh:
type: number
example: 5.0
weatherType:
type: string
example: rain
temperature:
type: number
example: 15
WeatherModel:
type: object
properties:
coord:
$ref: '#/components/schemas/Coord'
weather:
type: array
items:
$ref: '#/components/schemas/Weather'
description: (more info Weather condition codes)
base:
type: string
description: Internal parameter
example: cmc stations
main:
$ref: '#/components/schemas/Main'
visibility:
type: integer
description: 'Visibility, meter'
example: 16093
wind:
$ref: '#/components/schemas/Wind'
clouds:
$ref: '#/components/schemas/Clouds'
rain:
$ref: '#/components/schemas/Rain'
snow:
$ref: '#/components/schemas/Snow'
dt:
type: integer
description: 'Time of data calculation, unix, UTC'
format: int32
example: 1435658272
sys:
$ref: '#/components/schemas/Sys'
id:
type: integer
description: City ID
format: int32
example: 2172797
name:
type: string
example: Cairns
cod:
type: integer
description: Internal parameter
format: int32
example: 200
Coord:
title: Coord
type: object
properties:
lon:
type: number
description: 'City geo location, longitude'
example: 145.77
lat:
type: number
description: 'City geo location, latitude'
example: -16.92
Weather:
title: Weather
type: object
properties:
id:
type: integer
description: Weather condition id
format: int32
example: 803
main:
type: string
description: 'Group of weather parameters (Rain, Snow, Extreme etc.)'
example: Clouds
description:
type: string
description: Weather condition within the group
example: broken clouds
icon:
type: string
description: Weather icon id
example: 04n
Main:
title: Main
type: object
properties:
temp:
type: number
description: 'Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
example: 293.25
pressure:
type: integer
description: 'Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa'
format: int32
example: 1019
humidity:
type: integer
description: 'Humidity, %'
format: int32
example: 83
temp_min:
type: number
description: 'Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
example: 289.82
temp_max:
type: number
description: 'Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
example: 295.37
sea_level:
type: number
description: 'Atmospheric pressure on the sea level, hPa'
example: 984
grnd_level:
type: number
description: 'Atmospheric pressure on the ground level, hPa'
example: 990
Wind:
title: Wind
type: object
properties:
speed:
type: number
description: 'Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.'
example: 5.1
deg:
type: integer
description: 'Wind direction, degrees (meteorological)'
format: int32
example: 150
Clouds:
title: Clouds
type: object
properties:
all:
type: integer
description: 'Cloudiness, %'
format: int32
example: 75
Rain:
title: Rain
type: object
properties:
3h:
type: integer
description: Rain volume for the last 3 hours
format: int32
example: 3
Snow:
title: Snow
type: object
properties:
3h:
type: number
description: Snow volume for the last 3 hours
example: 6
Sys:
title: Sys
type: object
properties:
type:
type: integer
description: Internal parameter
format: int32
example: 1
id:
type: integer
description: Internal parameter
format: int32
example: 8166
message:
type: number
description: Internal parameter
example: 0.0166
country:
type: string
description: 'Country code (GB, JP etc.)'
example: AU
sunrise:
type: integer
description: 'Sunrise time, unix, UTC'
format: int32
example: 1435610796
sunset:
type: integer
description: 'Sunset time, unix, UTC'
format: int32
example: 1435650870
servers:
- description: SwaggerHub API Auto Mocking
url: 'https://virtserver.swaggerhub.com/matthaeusheer/pokino_api/1.0.0'
